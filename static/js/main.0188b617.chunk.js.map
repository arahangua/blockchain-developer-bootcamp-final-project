{"version":3,"sources":["components/Navbar.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","fontSize","textAlign","Navbar","account","classes","result","React","useState","anchorEl","setAnchorEl","className","AppBar","position","style","backgroundColor","Toolbar","Button","color","href","Typography","variant","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Table","Projects","columns","field","data","query","Promise","resolve","reject","options","search","paging","sorting","rowStyle","height","localization","header","actions","formControl","margin","minWidth","selectEmpty","marginTop","TextField","marginLeft","unit","width","App","content","chooseid","setChooseid","vote_value","setVotevalue","handleChange","e","type","value","target","refresh","problemloading","setProblemLoading","setAccount","loading","setLoading","Votingcont","setVotingcont","contractowner","setContractOwner","limitforproj","setlimitforproj","setProjects","projdescription","setProjdescription","setNum_of_allowed_proj","proj_proposed","setProj_proposed","connected","setconnected","loadWeb3","a","window","ethereum","web3","Web3","enable","currentProvider","alert","loadBlockchainData","eth","getAccounts","accounts","net","getId","networkId","networkData","Voting","networks","console","log","votingContract","Contract","abi","address","methods","Owner","call","owner","Proposal_limit","proj_limit","Project_num","x","arr","i","then","Project","description","total_votes","likes","dislikes","abstention","walletAddress","request","method","params","eth_accounts","location","reload","useEffect","on","addProject","add_project","send","from","proj_id","events","registered_project","returnValues","project_num","descrip","vot","lik","dislik","unsur","unsure","p_p","increased_proj_proposed","proposed_num","parseInt","success","givevote","ChoiceId","voting_value","vote","id_returned","Voted","prod_id","changelimit","limit_val","change_proposal_limit","limit_returned","changed_proposal_limit","FormControl","InputLabel","Select","labelId","onChange","length","map","project","idx","key","val","label","autoComplete","multiline","fullWidth","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0188b617.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: 40,\n    textAlign: \"center\"\n  },\n}));\n\nexport default function Navbar({account,result}) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  // result ? id=\"#add\": alert(\"Nikal laude\");\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{backgroundColor:\"#5280E2\"}}>\n        <Toolbar>\n        <Button style={{color: \"White\"}} href=\"#add\">Submit a proposal</Button>\n          <Typography variant=\"h6\" className={classes.title}>\n          Project proposal / voting\n          </Typography>\n          <Button\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            style={{color: \"White\", fontSize:\"12\"}}\n          >\n            Details\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem>Address: {account}</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./Table.css\";\nimport MaterialTable from \"material-table\";\nimport Check from \"@material-ui/icons/Check\";\nimport Clear from \"@material-ui/icons/Clear\";\n\nexport default function Table({ Projects }) {\n  // const [select, setSelect] = useState(false);\n  // var icons;\n  // select == false ? (icons = Clear) : (icons = Check);\n // const mapedData =() =>{\n  //  Projects.map((i, idx) => {\n  //   return [{ SNo: idx, description: i.description, vote: i.total_votes, likes: i.likes, dislikes: i.dislikes, unsure: i.unsure }]\n  //  })\n  //}\n\n  return (\n    <div className=\"table_style\">\n      <MaterialTable\n        columns={[\n          { title: \"ID.\", field: \"id\" },\n          { title: \"Description\", field: \"description\" },\n          { title: \"Total # of votes\", field: \"total_votes\" },\n          { title: \"Likes\", field: \"likes\" },\n          { title: \"Dislikes\", field: \"dislikes\" },\n          { title: \"Indifferent\", field: \"abstention\" }\n          \n          \n          // {\n          //   cellStyle: {\n          //     height: 50.5\n          //   },\n          // },\n        ]}\n        data={\n          query =>\n            new Promise((resolve, reject) => {\n                // prepare your data and then call resolve like this:\n                resolve({\n                    data: Projects,\n                    //totalCount: Projects.length,\n                });\n            })\n        \n\n          // [\n          // // mapedData()\n          // { SNo: \"1\", name: \"Baran\", vote: \"10\" },\n          // { SNo: \"2\", name: \"Baran\", vote: \"10\" },\n          // { SNo: \"3\", name: \"Baran\", vote: \"10\" },\n          // ]\n        }\n        title=\"Project\"\n        options={{\n          search: false,\n          paging: false,\n          sorting: false,\n          // selection: true,\n          rowStyle: { height: 39.5 },\n        }}\n        localization={{\n          header: {\n            actions: \"Choose\",\n          },\n        }}\n        // onRowClick={(() =>  setSelect(!select))}\n        // actions={[\n        //   {\n        //     icon: icons,\n        //     //icons: {tableIcons},\n        //     onClick: (event, rowData) => {\n        //       // setSelect(!select);\n        //     },\n        //   },\n        // ]}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Table from \"./components/Table\";\nimport Voting from \"./contracts/Voting.json\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  TextField:{\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles(); //setting style class\n  const [chooseid, setChooseid] = useState(\"\"); //for choosing project id \n  const [vote_value, setVotevalue] = useState(0); // value for voting\n  \n  const handleChange = (e, type) => {\n    const value = e.target.value;\n    type === 'id' ? setChooseid(value) : setVotevalue(value)\n  }\n\n  const [refresh, setrefresh] = useState(1);\n  //input value\n\n  // web3 state variables\n  let content;\n  const [problemloading, setProblemLoading] = useState(false);\n  const [account, setAccount] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  \n  //states related to the Voting\n  const [Votingcont, setVotingcont] = useState();\n  const [contractowner, setContractOwner] = useState(\"\");\n  const [limitforproj, setlimitforproj] = useState(3);\n  const [Projects, setProjects] = useState([]);\n  const [projdescription, setProjdescription] = useState(\"\");\n  const [num_of_allowed_proj, setNum_of_allowed_proj] = useState(0);\n  const [proj_proposed, setProj_proposed] = useState();\n  const [connected, setconnected] = useState(0);\n\n  //loading web3 \n  const loadWeb3 = async () =>{\n    if (window.ethereum){\n    window.web3 = new Web3(window.ethereum)\n    await window.ethereum.enable()\n    } else if (window.web3){\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else{\n      window.alert(\"The browser doesn't support web3, please install metamask (https://metamask.io/)\")\n    }\n  }\n\n  const loadBlockchainData = async () => {\n    setLoading(true);\n    if (typeof window.ethereum == \"undefined\") {\n      return;\n    }\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    setAccount(accounts[0])\n    const networkId = await web3.eth.net.getId();\n    const networkData = Voting.networks[networkId];\n    console.log(networkId, networkData)\n\n    if(networkData){\n      const votingContract = new web3.eth.Contract(\n        Voting.abi, networkData.address\n      );\n\n      setVotingcont(votingContract);\n\n      const owner = await votingContract.methods.Owner().call();\n      console.log(owner);\n      setContractOwner(owner);\n      const proj_limit = await votingContract.methods.Proposal_limit().call();\n      setNum_of_allowed_proj(proj_limit)\n\n      var x = await votingContract.methods.Project_num().call();\n      var arr = [];\n\n      for (var i = 0; i < x; i++) {\n        await votingContract.methods.Projects(i).call()\n          .then((Project) => {\n            arr = [\n              ...arr,\n              { id: i + 1, description: Project[0], total_votes: Project[1], likes : Project[2], dislikes : Project[3], abstention : Project[4] },\n            ];\n          });\n      }\n      setProjects(arr);\n\n      setLoading(false);\n      \n    } else {\n      window.alert(\"the contract is not deployed to the detected network.\");\n      setProblemLoading(true);\n    }\n  };\n\n  \n  const walletAddress = async () => {\n    await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n      params: [\n        {\n          eth_accounts: {},\n        },\n      ],\n    });\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    loadWeb3().then(loadBlockchainData())\n    \n\n    if(window.ethereum) {\n      window.ethereum.on('chainChanged', () => {\n        setconnected(1);\n        window.location.reload();\n      })\n      window.ethereum.on('accountsChanged', () => {\n        setconnected(1);\n        window.location.reload();\n      })\n    }else{\n      window.alert(\"Metamask account is not connected. Please connect metamask account to use the application.\")\n    }\n    \n\n\n\n    //esl\n  }, [refresh]);\n\n  const addProject = async () => {\n    console.log(projdescription);\n      \n    try {\n      await Votingcont.methods\n        .add_project(projdescription)\n        .send({ from: account })\n        .then((a) => {\n          let proj_id = a.events.registered_project.returnValues.project_num;\n          let descrip = a.events.registered_project.returnValues.description;\n          let vot = a.events.registered_project.returnValues.total_votes;\n          let lik = a.events.registered_project.returnValues.likes;\n          let dislik = a.events.registered_project.returnValues.dislikes;\n          let unsur = a.events.registered_project.returnValues.unsure;\n          \n          setProjects([...Projects, { id: proj_id, description: descrip, total_votes: vot, likes : lik, dislikes : dislik, unsure : unsur }]);\n          let p_p = a.events.increased_proj_proposed.returnValues.proposed_num;\n          console.log(p_p);\n          setProj_proposed(parseInt(p_p));\n          console.log(proj_proposed);\n        });\n        var success = 1;\n    } catch (err) {\n      var success = 0;\n      if(connected===1){\n        window.alert(\"You cannot submit more proposals than the set limit\");\n      }else{\n       window.alert(\"Etheruem account not connected! please connect\");\n      }\n    }\n    if(success){\n    console.log(Projects);\n    setProjdescription(\"\");\n    window.location.reload();\n    \n    };\n  };\n\n  const givevote = async () => {\n    try {\n      let ChoiceId = chooseid - 1;\n      let voting_value = vote_value;\n      await Votingcont.methods\n        .vote(ChoiceId, voting_value)\n        .send({ from: account })\n        .then((a) => {\n          let id_returned = a.events.Voted.returnValues.prod_id;\n          console.log(id_returned);\n        });\n      var success = 1;\n    } catch (err) {\n      var success = 0;\n      if(connected===1){\n        window.alert(\"You have already voted!\");\n      }else{\n        window.alert(\"Etheruem account not connected! please connect\");\n      }\n    }\n    if(success){\n    window.location.reload();\n    }\n    \n  };\n\n  const changelimit = async () => {\n    try {\n      let limit_val =  limitforproj;\n      \n      await Votingcont.methods\n        .change_proposal_limit(limit_val)\n        .send({ from: account })\n        .then((a) => {\n          let limit_returned = a.events.changed_proposal_limit.returnValues.limit_val;\n          console.log(limit_returned);\n          setNum_of_allowed_proj(limit_returned);\n        });\n      var success=1;\n    } catch (err) {\n      var success=0;\n      if(connected===1){\n        window.alert(\"You must be the owner of the contract to do this\");\n      }else{\n        window.alert(\"Etheruem account not connected! please connect\");\n      }\n      \n    }\n    if(success){\n    window.location.reload();\n    };\n  };\n \n  \n\n  if (loading === true) {\n    content = (\n      <p className=\"text-center\">\n        Loading...{problemloading ? <div>loading....</div> : \"\"}\n      </p>\n    );\n  } else {\n    const value_select = [-1,0,+1];\n    content = (\n      <div className=\"app\">\n        <div className=\"table\">\n          <Table Projects={Projects} />\n        </div>\n        <div className=\"do_vote\">\n          <h3>Select a project and click the \"VOTE\" button</h3>\n          <h3>1 : like, 0 : unsure, -1 : dislike </h3>\n        </div>\n        <div className=\"input_id\">\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"select_id\">Select ID</InputLabel>\n            <Select\n              labelId=\"select_id\"\n              id=\"select_id\"\n              value={chooseid}\n              onChange={(e) => handleChange(e, 'id')}\n            >\n              {\n                Projects.length !== 0 ? (\n                  Projects.map((project, idx) => ( \n                    <MenuItem key={idx} value={project.id}>\n                      {project.id}\n                    </MenuItem>\n                  ))\n                ) : (\n                  <MenuItem value={0}>No project</MenuItem>\n                )\n                // generateMenuItem()\n              }\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"select_value\">vote value</InputLabel>\n            \n            <Select\n              labelId=\"select_value\"\n              id=\"select_value\"\n              value={vote_value}\n              onChange={(e) => handleChange(e, 'value')}\n            >\n              {\n              value_select.map((val, idx) => {\n                return <option key={idx} value={val}>{val} </option>\n              })\n            }\n            </Select>\n          </FormControl>\n\n\n          <Button variant=\"contained\" onClick={givevote}>\n            VOTE\n          </Button>\n        </div>\n\n        <div className=\"after_voting\">\n          {<h6>You can vote only once per proposal (project)</h6>}\n        </div>\n        {/* <div className=\"showinguser_address\">\n          <h4>Your Address: {account}</h4>\n        </div>\n         */}\n        \n\n        \n          <div className=\"add_project\" id=\"add\">\n            <h3>Enter a short proposal statement:</h3>\n            <h3>You can propose up to # of proposals set by the owner of the contract (default is 3 per person)</h3>\n\n            <form className=\"project_form\">\n              <TextField\n                id=\"standard-full-width\"\n                label=\"description\"\n                autoComplete=\"off\"\n                //variant=\"outlined\"\n                multiline\n                fullWidth\n                value={projdescription}\n                onChange={(e) => setProjdescription(e.target.value)}\n              />\n              \n            </form>\n            <Button variant=\"contained\" onClick={addProject}>\n              SUBMIT\n            </Button>\n          </div>\n\n          <div className=\"add_project\" id=\"change\">\n            <h3>Change the upper limit for the number of proposals (default is 3 per person):</h3>\n            <h3>Only owner can change it</h3>\n\n            <form className=\"project_form\">\n              <TextField\n                id=\"outlined-basic\"\n                label=\"upper limit\"\n                autoComplete=\"off\"\n                variant=\"outlined\"\n                multiline= \"true\"\n                value={limitforproj}\n                onChange={(e) => setlimitforproj(e.target.value)}\n              />\n              \n            </form>\n            <Button variant=\"contained\" onClick={changelimit}>\n              SUBMIT\n            </Button>\n          </div>\n        \n          <div className=\"footer\">\n          <h4>Made by arahangua</h4>\n          </div> \n\n      </div>\n    );\n  }\n  // result={result}\n  return (\n    <div>\n      <Navbar account={contractowner} />\n\n      {account === \"\" ? (\n        <div className=\"container\">\n          {\" \"}\n          Connect your wallet to application{\"   \"}{\" \"}\n          <button onClick={walletAddress}>metamask</button>\n        </div>\n      ) : (\n        content\n      )}\n      {/* {content} */}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n  \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}